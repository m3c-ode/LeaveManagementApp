@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Employee Leave Manager</h1>
    <h4>An ASP.NET Core and Entity Framework based portfolio web application </h4>
</div>
<section id="welcome">
    <p>
        This web based application is a simulation application for Administrators to manage their Employees' leaves from work.
    </p>
    <p>
        As an Administrator on this platform, a user can:
        <ul>
            <li>
                See the list of employees
            </li>
            <li>
                Create and manage Leave Types (Number of days allocated...)
            </li>
            <li>
                Allocate leave types and related allocated days to Employees
            </li>
            <li>
                Send notifications to employees about leave types, allocations or status update
            </li>
            <li>
                See and manage the leave requests left by Employees and accept or decline them.
            </li>
            <li>
                Have a global vision of all the leave requests and their statuses
            </li>
        </ul>
    </p>
    <p>
        As an Employee on this platform, a user can:
        <ul>
            <li>
                Apply for a leave, putting in his dates, based on which leaves types the Administrator has made available
            </li>
            <li>
                See his list of Leave Requests, with the status update depending on the Admin's response
            </li>
            <li>
                See the status of his available Leave Allocations (number of days an employee can take)
            </li>
        </ul>
    </p>
    <hr />
    <p>
        Our application leverages the power of <strong>ASP.NET Core</strong> and <strong>Entity Framework Core</strong> to provide a robust and efficient platform for managing employee leave requests. With features like the <strong>Repository Pattern</strong> and <strong>Dependency Injection</strong>, we ensure clean and maintainable code architecture.
    </p>
    <p>
        By following the <strong>MVC pattern</strong> (Models, Views, and Controllers), we deliver a user-friendly interface that enables easy navigation and seamless interaction. Our application utilizes <strong>C#</strong> and <strong>.NET Core Web syntax</strong>, allowing for reliable and secure data processing.
    </p>
    <p>
        Security is a top priority for us, and we have implemented <strong>user authentication</strong> using <strong>ASP.NET Core Identity</strong>. This ensures that only authorized users can access the system and manage employee leave requests.
    </p>
    <p>
        Our use of <strong>Entity Framework Core Data Models</strong>, <strong>View Models</strong>, and <strong>AutoMapper</strong> enhances the efficiency of data management, while adhering to best practices. We have also incorporated various security measures throughout the development process to safeguard sensitive information.
    </p>
    <p>
        To enhance the overall look and feel of the application, we have utilized <strong>Bootstrap</strong> to style and manipulate the layout. The user interface is intuitive and responsive, providing an enjoyable user experience on different devices.
    </p>
    <p>
        Our application supports integration with external services, such as <strong>email services</strong>, enabling seamless communication and notifications. We have also implemented <strong>version control</strong> using GitHub and ensured seamless deployment to hosting platforms like Microsoft Azure.
    </p>
    <p>
        We are committed to delivering a reliable and user-friendly <strong>Employee Leave Manager application</strong>. If you have any questions or need assistance, please don't hesitate to contact us. Enjoy using our application!
    </p>
</section>